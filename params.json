{"name":"Image-api","body":"Image Api\r\n=========\r\n\r\nWhat is the main purpose of this library ?\r\n------------\r\nImage API is here to provide an easy access to image web service like imgur, flickr, etc.\r\nYou'll be able to get data from webservice, as you'll be able to push data like your last picture, ...\r\n\r\nWhat image web service is now supported ?\r\n-----\r\nToday, you can make request for: [imgur](http://api.imgur.com/) and [flickr](http://www.flickr.com/services/api/)\r\n\r\nHow to use it ?\r\n---------------\r\nAdd Image API into your classpath, then simply create the service object of your need (img ur, flickr, ...)\r\nas the example just bellow\r\n\r\n### With Flickr\r\n    \r\n``` java\r\nFlickr flickrProvider = new Flickr(\"YOUR API KEY\", \"YOUR API SECRET\");\r\n```\r\n\r\nThen, just call  Flickr with a request, and you'll get a response !\r\n\r\n``` java\r\nflickrProvider.call(new EchoRequest());\r\n```\r\n\r\nIf your request need parameters, just configure it with the request (ie : myRequest.setMyParameter());\r\n\r\n``` java\r\nEchoRequest request = new EchoRequest();\r\nrequest.setTestParameter(\"My Test Parameter\");\r\nEchoResponse response = flickrProvider.call(request);\r\n```\r\nThe response will represent the response from the web service.\r\nSo, for this [echo method](http://www.flickr.com/services/api/flickr.test.echo.html), you'll be able to check\r\nthe flickr status with the stat field.\r\n\r\n``` java\r\nSystem.out.println(response.getStat()); // will print ok\r\n```\r\n\r\n### With ImgUr\r\nIf you want to use the anonymous api:\r\n\r\n``` java\r\nImgUr imgurProvider = new ImgUr(\"YOUR ANONYMOUS API KEY\");\r\n```\r\n\r\nIf you want to use the authenticated api (with oauth):\r\n\r\n``` java\r\nImgUr imgurProvider = new ImgUr(\"YOUR API KEY\", \"YOUR API SECRET\");\r\n```\r\n\r\nthen you can call imgur like this :\r\n\r\n``` java\r\nImageResponse response = imgurProvider.call(new ImageRequest(\"An imgur image hashcode\"));\r\n```\r\n\r\nor like this for an authenticated resources :\r\n\r\n``` java\r\nAccountResponse = imgurProvider.call(new AccountRequest(yourAccessToken));\r\n```\r\n\r\nHow to use the authentication based on oauth ?\r\n--------\r\nImage api use [scribe](https://github.com/fernandezpablo85/scribe-java) for oauth support.\r\nJust call methods on your provider as the [oauth protocol](http://www.flickr.com/services/api/auth.oauth.html) describe it.\r\nYou haven't need to create any OAuthService as seen in [scribe](https://github.com/fernandezpablo85/scribe-java) documention, Image api will do it for you !\r\n\r\n``` java\r\nToken requestToken = imgur.getRequestToken();\r\nString url = imgur.getAuthorizationUrl(requestToken); // redirect your user on this url\r\n/* [...] */\r\nVerifier verifier = new Verifier(userCode); // code given by imgur\r\nToken accessToken = imgur.getAccessToken(requestToken, verifier); // use this token with authenticated request\r\n```\r\n\r\nHow to get it ?\r\n---------------\r\nGrap it into the [download section](http://github.com/dwursteisen/imgur-API/downloads)\r\n\r\nHow to compile it ?\r\n-------------------\r\nCreate a property file into 'src/test/resources' directory named secret.properties with this bellowed content.\r\nThis file is only used for the testing phase of packaging.\r\n\r\n``` \r\n    flickr.apikey = YOUR_FLICKR_API_KEY\r\n    flickr.secret = YOUR_FLICKR_SECRET\r\n    imgur.apikey = YOUR_IMGUR_API_KEY\r\n    imgur.secret = YOUR_IMGUR_SECRET\r\n    imgur.anonymous.apikey = YOUR_IMGUR_ANONYMOUS_API_KEY\r\n```\r\n\r\n Compile it with maven\r\n\r\n```\r\nmvn install\r\n```\r\n\r\nthe jar will be avaible into the target directory.\r\n\r\nHow to *just* compile it ?\r\n--------------------------\r\nSkip tests !\r\n\r\n```\r\nmvn install -Dmaven.test.skip=true\r\n```\r\n\r\nGot an issue?\r\n--------------\r\nJust fill an [issue](https://github.com/dwursteisen/imgur-API/issues) with your use case (service used, request, response received, response expected, ...)\r\n\r\nImage api dependencies:\r\n----\r\n``` java\r\n    imgur-api:imgur-api:jar:1.0-SNAPSHOT\r\n    +- com.google.code.gson:gson:jar:2.1:compile\r\n    +- org.scribe:scribe:jar:1.3.1-SNAPSHOT:compile\r\n    |  \\- commons-codec:commons-codec:jar:1.4:compile\r\n    +- junit:junit:jar:4.8.2:compile\r\n    +- commons-lang:commons-lang:jar:2.6:test\r\n    +- org.mockito:mockito-all:jar:1.9.0:test\r\n    +- commons-io:commons-io:jar:2.1:compile\r\n    \\- log4j:log4j:jar:1.2.16:compile\r\n```","tagline":"an easy-to-use java library for Imgur API webservice and flickr api webservice. And all of this with OAuth support !","google":"UA-30539685-1","note":"Don't delete this file! It's used internally to help with page regeneration."}